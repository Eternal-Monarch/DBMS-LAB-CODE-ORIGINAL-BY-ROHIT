--ASSIGNMENT 7
--01
CREATE OR REPLACE TRIGGER T1
BEFORE DELETE ON MEMBER_COPY
FOR EACH ROW
BEGIN
RAISE_APPLICATION_ERROR(-20000, 'DELETE NOT POSSIBLE');
END
SELECT * FROM MEMBER_COPY
DELETE FROM MEMBER_COPY WHERE MEMBER_ID =3

--2
CREATE TABLE BOOK_COPY AS SELECT * FROM BOOKS
CREATE OR REPLACE TRIGGER T2
BEFORE UPDATE ON BOOK_COPY
FOR EACH ROW
BEGIN
IF :NEW.COST<200 THEN 
RAISE_APPLICATION_ERROR (-20001, 'UPDATE NOT POSSIBLE');
END IF;
END;
 UPDATE BOOK_COPY SET COST = 150 WHERE BOOK_NO = 101
  

--4
DECLARE
MEMNAME MEMBER.MEMBER_NAME%TYPE;
BEGIN
SELECT MEMBER_NAME INTO MEMNAME FROM MEMBER WHERE MEMBER_ID =1;
IF SQL%FOUND THEN
DBMS_OUTPUT.PUT_LINE('MEMBER NAME :'||MEMNAME);
END IF;
EXCEPTION
WHEN NO_DATA_FOUND THEN
RAISE_APPLICATION_ERROR(-20020, 'NO DATA FOUND');
END;


--5
DECLARE
CREATE TABLE CHANGE(BOOK_NO NUMBER(5),CHANGE_DATE DATE,CHANGE_TYPE VARCHAR2(10));


CREATE OR REPLACE TRIGGER T3
BEFORE UPDATE OR DELETE ON BOOK_COPY
FOR EACH ROW
BEGIN
IF UPDATING THEN 
INSERT INTO CHANGE VALUES(:NEW.BOOK_NO, SYSDATE, 'UPDATE');
ELSE
INSERT INTO CHANGE VALUES(:OLD.BOOK_NO, SYSDATE, 'DELETE');
END IF;
END;

UPDATE BOOK_COPY SET COST = 850 WHERE BOOK_NO =108
DELETE FROM BOOK_COPY WHERE BOOK_NO =107
SELECT * FROM CHANGE



--6
CREATE TABLE ISSUE_COPY AS SELECT * FROM ISSUE

CREATE OR REPLACE TRIGGER T4
BEFORE INSERT ON ISSUE_COPY 
FOR EACH ROW
DECLARE
WEEKDAY_ERROR EXCEPTION;
BEGIN
IF TO_CHAR(SYSDATE, 'DY') = 'FRI' OR TO_CHAR(SYSDATE, 'DY') ='SUN' THEN RAISE WEEKDAY_ERROR;
END IF;
EXCEPTION

WHEN WEEKDAY_ERROR THEN  
RAISE_APPLICATION_ERROR (-20021, 'BOOK ISSUE NOT POSSIBLE' );
END;
INSERT INTO ISSUE_COPY (LIB_ISSUE_ID,BOOK_NO,MEMBER_ID,ISSUE_DATE)VALUES(7010,104,1,SYSDATE);
--7
create or replace trigger t5
before insert on issue_copy
for each row
begin
 if :new.issue_date > sysdate then
  raise_application_error(-20008, 'issue date can not be in future');
 end if;
end;
insert into issue_copy (book_no, member_id, issue_date) values (102, 5, '08/01/2020')
--8


create table countrow as (select count(BOOK_NO) as count from BOOKS123)
create or replace trigger t6
after insert or update or delete on BOOKS123
for each row
begin
 if inserting then
  update countrow set count = count + 1;
 elsif deleting then 
  update countrow set count = count - 1;
 end if;
end;
SELECT * FROM BOOKS123







 

